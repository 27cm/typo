<?php

namespace Wheels\Typo\Module\Space;

use Wheels\Typo\Typo;
use Wheels\Typo\Module\Module;

/**
 * Пробелы.
 *
 * Расставляет пробелы в тексте.
 */
class Space extends Module
{
    /**
     * {@inheritDoc}
     */
    static protected $_order = array(
        'A' => 0,
        'B' => 10,
        'C' => 0,
        'D' => 0,
        'E' => 0,
        'F' => 0,
    );

    /**
     * {@inheritDoc}
     */
    static protected $_helpers = array();


    // --- Открытые методы ---

    /**
     * Стадия B.
     *
     * - Применяет правила для расстановки пробелов в тексте.
     *
     * @return void Этот метод не возвращает значения после выполнения.
     */
    public function stageB()
    {
        $c = Typo::getChars('chr');

        $helpers = array(
            // Знаки препинания
            '{p}' => '[!?:;,.' . $c['hellip'] . ']',

            // Открывающая кавычка
            '{lquot}' => '(?:"|' . $c['laquo'] . '|' . $c['ldquo'] . '|' . $c['lsquo'] . '|' . $c['bdquo'] . '|' . $c['lsaquo'] . ')',
        );

        static::addHelpers($helpers);

        #B1 Нормализация пробелов
        if ($this->getOption('normalize')) {
            $this->applyRulesPregReplace(array(
                '/\h/u' => ' ',
            ));
        }

        $this->applyRulesPregReplace(array(
            #B2 Добавление пропущенных пробелов после закрывающей и перед открывающей скобками
            '/((?:\)|{a}|{b}){t}*)({t}*\()/u' => '$1 $2',
            '/(\){t}*)({t}*(?:\(|{a}|{b}))/u' => '$1 $2',

            #B3 Удаление лишних пробелов возле знаков препинания
            '/(?<={p})({t}*)\h+(?=(?:({t}|\h)*){p})/u' => '$1',
            '/(?<=^|\n|\)|{a}|\]\]\])({t}*)\h+(?=(?:({t}|\h)*){p})/iu' => '$1',

            #B4 Добавление недостающих пробелов после знаков препинания
            '/((?:^|\n|\)|{a}|{b}|\d){t}*(?:{p}{t}*)+)(?={t}*([\(\-]|{a}|{b}))/iu' => '$1 ',
            '/((?:^|\n|\)|{a}|{b}){t}*(?:{p}{t}*)+)(?={t}*\d)/iu' => '$1 ',
            '/([,\.]{t}*)([-"])/' => '$1 $2',
        ));

        // Расстановка неразрывных пробелов
        if ($this->getOption('nbsp')) {
            $this->applyRulesPregReplace(array(
                #B5 Неразрывный пробел перед сокращениями px, dpi и lpi
                '/(?<=\d)\h(?=(px|dpi|lpi)\b)/iu' => $c['nbsp'],

//                #B4 Неразрывный пробел перед двухсимвольными аббревиатурами
//                '/(?<={a})\h(?={t}*[A-ZА-ЯЁ]{2}\b)/u' => $c['nbsp'],

                #B6 Расстановка неразрывных пробелов между сокращениями «гл.», «стр.», «рис.», «илл.», «ил.», «ст.», «с.», «п.» и номером
                '/(?<=\b)((?:гл|стр|рис|табл|илл?|ст?|п)\.)\h(?=[XIV\d])/iu'  => '$1' . $c['nbsp'],

                #B7 Расстановка неразрывных пробелов между сокращениями «г.», «ул.», «пер.», «просп.», «пл.», «бул.», «наб.», «пр.», «ш.», «туп.», «б-р», «пр-кт» и географическими названиями
                '/(?<=\b)((?:г|ул|пер|просп|пл|бул|наб|пр|ш|туп|см|им)\.|б\-р|пр\-кт)\h/iu' => '$1' . $c['nbsp'],

                #B8 Расстановка неразрывных пробелов между словами «век», «год» (сокращениями «в.», «г.») и числами
                '/(?<=\b)([XIV]{1,5}|[12]\d|[1-9])\h?(?=(вв?|век([ауе]|ом)?)\b)/u' => '$1' . $c['nbsp'],
                '/(?<=\b)([1-9]\d{2,3})\h?(?=(год([ауе]|ом)?|гг?\.?)\b)/iu' => '$1' . $c['nbsp'],
                
                '/\b([А-ЯЁ][а-яё]+)\h(?=[XIV]{1,5}\b)/u' => '$1' . $c['nbsp'],

                #B9 Расстановка неразрывных пробелов между сокращениями «д.», «кв.», «эт.» и номерами
                '/\b((?:д|кв|эт)\.)[ ]?(?=\d)/iu' => '$1' . $c['nbsp'],

                #B10 Неразрывный пробел в датах между числом и месяцем
                '/(?<=\d)\h*(?=января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря)/iu' => $c['nbsp'],

                #B11 Неразрывный пробел перед частицами
                '/\h(?=(же?|бы?|л[иь]|либо)\b)/iu' => $c['nbsp'],

                #B12 Неразрывные пробелы между инициалами и фамилией
                '/([А-ЯЁ]\.)\h([А-ЯЁ]\.)\h(?=[А-ЯЁ][а-яё])/u'  => '$1' . $c['nbsp'] . '$2' . $c['nbsp'],
                '/([А-ЯЁ]\.)\h(?=[А-ЯЁ][а-яё])/u'              => '$1' . $c['nbsp'],
                '/([А-ЯЁ][а-яё]+)\h([А-ЯЁ]\.)\h(?=[А-ЯЁ]\.)/u' => '$1' . $c['nbsp'] . '$2' . $c['nbsp'],
                '/([А-ЯЁ][а-яё]+)\h(?=[А-ЯЁ]\.)/u'             => '$1' . $c['nbsp'],

                #B13 Неразрывный пробел в денежных суммах
                '/(?<=\d)\h((?:млн|тыс|млрд)\.?)\h(р(уб)?)(?=\b)/iu' => $c['nbsp'] . '$1' . $c['nbsp'] . '$2',
                '/(?<=\d)\h(?=(?:млн|тыс|млрд)\b)/iu' => $c['nbsp'],
                '/(?<=\d)\h(?=(?:р(уб)?|коп)\b)/iu' => $c['nbsp'],
//                #B Форматирование денежных сокращений
//                '/(\d)((\040|\&nbsp\;)?(тыс|млн|млрд)\.?(\040|\&nbsp\;)?)?(\040|\&nbsp\;)?(руб\.|долл\.|евро|€|&euro;|\$|у[\.]? ?е[\.]?)/iu' => function($m) {
//                    return $m[1].($m[4]?'&nbsp;'.$m[4].($m[4]=='тыс'?'.':''):'').'&nbsp;'.(!preg_match("#у[\\\\.]? ?е[\\\\.]?#iu",$m[7])?$m[7]:'у.е.');
//                },

                #B14 Неразрывный пробел перед номером версии программы
                '/\b((?:[vв]|вер(?:си(?:[яийю]|ей|ях|ям|ями))?|ver(?:sions?)?)\.?)\h(\d+(?:.\d+)*(?:[ab]|pa|rc|rtm|ga|eol|alpha|beta)?)\b/iu' => '$1' . $c['nbsp'] . '$2',

                #B15 Расстановка неразрывных пробелов в сокращениях «и т. д.», «и т. п.», «в т. ч.», «т. к.», «т. е.», «и др.», «до н. э.», «ч. т. д.», «ю. ш.», «с. ш.», «з. д.», «в. д.»
                '/(?<=\bи)\h(т\.)\h?([дп]\.)/iu' => $c['nbsp'] . '$1' . $c['nbsp'] . '$2',
                '/(?<=\bв)\h(т\.)\h?(ч\.)/iu' => $c['nbsp'] . '$1' . $c['nbsp'] . '$2',
                '/(?<=\b)(т\.)\h?([ке]\.)/iu' => '$1' . $c['nbsp'] . '$2',
                '/(?<=\bи)\h(?=др\.)/iu' => $c['nbsp'],
                '/(?<=\bдо)\h(н\.)\h?(э\.)/iu' => $c['nbsp'] . '$1' . $c['nbsp'] . '$2',
                '/(?<=\bч\.)\h?(т\.)\h?(д\.)/iu' => $c['nbsp'] . '$1' . $c['nbsp'] . '$2',
                '/\h([юc]\.)\h?(ш\.)/iu' => $c['nbsp'] . '$1' . $c['nbsp'] . '$2',
                '/\h([зв]\.)\h?(д\.)/iu' => $c['nbsp'] . '$1' . $c['nbsp'] . '$2',

                #B16 Неразрывный пробел после тире, стоящего в начале строки, после точки, троеточия, восклицательного и вопросительного знаков
                '/((?:^|\n|[?!.]|' . $c['hellip'] . ')\h?(?:\-{1,3}|' . $c['ndash'] . '|' . $c['mdash'] . '))/u' => '$1' . $c['nbsp'],

                #B17 Неразрывный пробел перед тире в остальных случаях
                '/\h(?=(\-{1,3}|' . $c['ndash'] . ')\h)/u' => $c['nbsp'],

                #B18 Неразрывный пробел после предлогов, союзов и коротких слов
                // @todo: просто проверить, чтобы впереди был пробел в ближайших 10 символах
                '/((^|[^' . $c['nbsp'] . '])\b([iuaавикосуя]|to|from|over|under|in|the|во|до|по|за|но|да|в?не|ни|обо?|ото?|изо?|подо?|предо?|про|над?|как|безо?|что|для|там|ещё|или|меж(ду)?|перед|предо|около|через|сквозь|для|при))\h(?={t}*({a}|\-){1,12}{t}*(?!' . $c['nbsp'] . '{a}|{a}|\-))/iu' => '$1' . $c['nbsp'],

                #B19 Неразрывный пробел между сокращением форм собственности и названием организации
                '/(?<=\b)(ООО|ЗАО|ОАО|НИИ|ПБОЮЛ)\h(?={t}*{lquot}?{t}*[A-ZА-ЯЁ])/u' => '$1' . $c['nbsp'],

                #B20 Неразрывный пробел перед последним словом в предложении
                '/([ ]{t}*)((?:{a}|\-)+)({t}*)\h({t}*)((?:{a}|\-)+)(?={t}*(\r?\n|$|[?!.' . $c['hellip'] . ']))/iu' => function ($m) use ($c) {
                    if (mb_strlen($m[2]) + mb_strlen($m[5]) < 13) {
                        return $m[1] . $m[2] . $m[3] . $c['nbsp'] . $m[4] . $m[5];
                    } else {
                        return $m[0];
                    }
                },
            ));
        }

        // Расстановка тонких шпаций
        // @todo: проверить, что тонкая шпация разрывает... сделать nobr
        if ($this->getOption('thinsp')) {
            $this->applyRulesPregReplace(array(
                #B21 Тонкая шпация перед символом процента
                '/(?<=\b)(\d+)\h?(?=%)/u' => '$1' . $c['thinsp'],

                #B22 Тонкая шпация между символом номера или параграфа и числом
                '/(?<=№|' . $c['sect'] . ')\h?(?=\d)/u' => $c['thinsp'],

                #B23 Тонкая шпация между разрядами чисел
                '/(?<=\d)\h(?=\d{3})/u' => $c['thinsp'],

                #B24 Тонкая шпация между числом и единицами измерения
                '/(?<=\b)(\d+{t}*)\h?(?={t}*{m}\b)/iu' => '$1' . $c['thinsp'],

                #B25 Тонкая шпация после числа градусов
                '/(?<=\b)(\d+)\h?(' . $c['deg'] . ')\h?(?=[CF]\b)/u' => '$1$2' . $c['thinsp'],
            ));
        }

        // Удаление лишних пробелов
        if ($this->getOption('remove')) {
            $this->applyRulesPregReplace(array(
                #B26 Удаление лишних пробелов между словами
                '/((?:{a}|{b}){t}*)(\h)(\h+)({t}*(?:{a}|{b}))/u' => '$1$2$4',

                #B27 Удаление пробелов в сокращениях P.S., P.P.S.
                '/(?<=\b)p\.\h?((p\.\h?)?)s\./iu' => function ($m) {
                    return (empty($m[1]) ? 'P.S.' : 'P.P.S.');
                },

                #B28 Удаление лишних пробелов после открывающей скобочки и перед закрывающей
                '/(\({t}*)\h+/u' => '$1',
                '/\h+({t}*\))/u' => '$1',

                #B29 Удаление лишних пробелов в конце текста
                '/\h+(?={t}*$)/u' => '',
            ));
        }
    }
}
