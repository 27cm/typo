<?php

namespace Wheels\Typo\Module;

use Wheels\Typo;
use Wheels\Typo\Module;
use Wheels\Typo\Utility;

/**
 * Пунктуация.
 *
 * @link http://wikipedia.org/wiki/Punctuation
 */
class Punct extends Module
{
    /**
     * @see \Wheels\Typo\Module::$default_options
     */
    protected $default_options = array(
        /**
         * Исправление пробелов возле знаков препинания.
         *
         * @var bool
         */
        'spaces' => true,

        /**
         * Автоматическая расстановка знаков препинания.
         *
         * @var bool
         */
        'auto' => false,

        /**
         * Используемые модули.
         *
         * @var string[]
         */
        'modules' => array(
            'punct/dash',
            'punct/quote',
        ),
    );

    /**
     * @see \Wheels\Typo\Module::$order
     */
    static public $order = array(
        'A' => 0,
        'B' => 10,
        'C' => 0,
        'D' => 0,
        'E' => 0,
        'F' => 0,
    );


    // --- Открытые методы класса ---

    /**
     * Стадия B.
     *
     * Применяет правила для расстановки знаков препинания в тексте.
     */
    protected function stageB()
    {
        $с =& Typo::$chars['chr'];

        $rules = array(
            // Исправление пробелов возле знаков препинания
            'spaces' => array(
                #B1 Удаление лишних пробелов возле знаков препинания
                '~(?<={p})({t}*)\h+(?=(({t}|\h)*){p})~' => '$1',
                '~(?<=^|\n|\)|{a}|\]\]\])({t}*)\h+(?=(({t}|\h)*){p})~u' => '$1',

                #B2 Добавление недостающих пробелов после знаков препинания
                '~(?<=^|\n|\)|{a}|\]\]\])((?:{t}*{p}{t}*)+)\h*(?={t}*(\(|{a}|{b}))~iu' => '$1 ',
                '~([,\.]{t}*)-~' => '$1 -',
            ),

            #B3 Замена  двух знаков "..", "?.", "!." на три "...", "?..", "!.."
            '~(?<=^|\n|\)|{a}|\]\]\])({t}*[!?\.]{t}*)\.(?!{t}*{p})~u' => '$1..',

            #B4 Замена двух одинаковых знаков на один
            '~(?<=^|\n|\)|{a}|\]\]\])({t}*)([!?:;,])({t}*)\\2(?!{t}*{p})~u' => '$1$2$3$4',

            #B5 Замена "!?" на "?!"
            '~(?<=^|\n|\)|{a}|\]\]\])({t}*)\!({t}*)\?(?!{t}*{p})~u' => '$1?$2!',

            #B6 Оставляем 3 знака ("???", "?!!", "?.." и т. п.) вместо 4 или 5
            '~(?<=^|\n|\)|{a}|\]\]\])({t}*(?:\!{t}*|\?{t}*|\.{t}*){3})(?:\!{t}*|\?{t}*|\.{t}*){1,2}(?!{p})~u' => '$1',

            #B7 Заменяем три точки на знак многоточия
            '~(?<=^|\n|\)|{a}|\]\]\])({t}*)\.{3}(?!{t}*{p})~u' => '$1' . $с['hellip'],

            // Автоматическая расстановка знаков препинания
            'auto' => array(
                #B8 Расстановка запятых перед союзами "а" и "но"
                '~({a}|{b})\h(но|а)(?=\h)~u' => '$1, $2',

                #B9 Добавление забытой точки в конце текста
                '~({a})(({t}|\h)*)$~u' => '$1.$2',
            ),

            #B10 Расстановка апострофов
			'~(?<={a})\'(?={a})~iu' => Utility::chr(700),

            #B11 Расстановка акцентов
            '~(?<=[аеёиоуыэюя])\`(?=[а-яё])~iu' => Utility::chr(769),
        );

        $this->applyRules($rules);
    }
}